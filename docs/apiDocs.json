{
  "openapi": "3.0.3",
  "info": {
    "title": "Emote",
    "description": "Get up and running:\n1. Either use the default details under the login route to get logged in or create your own account by calling the request register route\n2. If you choose the latter, you will be sent an account confirmation email => simply copy the jwt => click authorize in the swagger docs => paste jwt into registerToken input => make request to the register endpoint => copy the returned jwt => click authorize in the swagger docs => paste jwt into userToken input\n3. You should now be authorized to interact with any of the routes",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "description": "",
        "summary": "Login",
        "tags": [
          "Auth"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Registered email address of the user"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for the user account"
                  }
                },
                "required": ["email", "password"]
              },
              "example": {
                "email": "1@gmail.com",
                "password": "123"
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/request-register": {
      "post": {
        "description": "Sends email with account registration link",
        "summary": "Request Register",
        "tags": [
          "Auth"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Full name of the user"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address of the user"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 3,
                    "description": "Password for the account, must be at least 3 characters long"
                  }
                },
                "required": ["name", "email", "password"]
              },
              "example": {
                "name": "John Doe",
                "email": "john.doe@example.com",
                "password": "securePass123"
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/register": {
      "post": {
        "description": "Creates account using jwt sent via email from /auth/request-register",
        "summary": "Register",
        "tags": [
          "Auth"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "registerToken": []
          }
        ]
      }
    },
    "/auth/request-reset-password": {
      "post": {
        "description": "Sends email with password reset link",
        "summary": "Request Reset Password",
        "tags": [
          "Auth"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              },
              "example": {
                "email": "jack@gmail.com"
              }
            }
          }
        },
        "security": []
      }
    },
    "/auth/reset-password": {
      "patch": {
        "description": "Resets password using jwt sent via email from /auth/request-reset-password",
        "summary": "Reset Password",
        "tags": [
          "Auth"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password"],
                "properties": {
                  "password": {
                    "type": "string",
                    "minLength": 3
                  }
                }
              },
              "example": {
                "password": "securePass123"
              }
            }
          }
        },
        "security": [
          {
            "resetPasswordToken": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "description": "",
        "summary": "Get users",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for fetching results.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          }
        ]
      ,
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "",
        "summary": "Get user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/users/me": {
      "patch": {
        "description": "",
        "summary": "Update logged-in user",
        "tags": [
          "Users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's name, must be at least 3 characters long.",
                    "minLength": 3,
                    "example": "John Doe"
                  },
                  "coverImage": {
                    "type": "string",
                    "format": "uri",
                    "description": "URI pointing to the user's cover image.",
                    "example": "https://example.com/path/to/cover.jpg"
                  },
                  "profileImage": {
                    "type": "string",
                    "format": "uri",
                    "description": "URI pointing to the user's profile image.",
                    "example": "https://example.com/path/to/profile.jpg"
                  },
                  "bio": {
                    "type": "string",
                    "description": "Biographical description which can only contain emojis.",
                    "example": "üòÄüéâüëçüöÄ"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/friendships/posts": {
      "get": {
        "description": "",
        "summary": "Get friends' posts",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for fetching results.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          },
          {
            "name": "commentLimit",
            "in": "query",
            "description": "Number of comments per post.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 3,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/users/{id}/posts": {
      "get": {
        "description": "",
        "summary": "Get user's posts",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for fetching results.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          },
          {
            "name": "commentLimit",
            "in": "query",
            "description": "Number of comments per post.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 3,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/posts": {
      "post": {
        "description": "",
        "summary": "Create post",
        "tags": [
          "Posts"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Text of the post, which must consist solely of emojis.",
                    "example": "üòäüéâüëç"
                  },
                  "image": {
                    "type": "string",
                    "format": "uri",
                    "description": "Optional URI linking to an image associated with the post.",
                    "example": "https://example.com/image.jpg"
                  }
                },
                "required": ["text"]
              }
            }
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/posts/{id}": {
      "patch": {
        "description": "",
        "summary": "Update post",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Text of the post, which must consist solely of emojis.",
                    "example": "üòäüéâüëç"
                  },
                  "image": {
                    "type": "string",
                    "format": "uri",
                    "description": "Optional URI linking to an image associated with the post.",
                    "example": "https://example.com/image.jpg"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "Delete post",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/posts/{id}/reactions": {
      "post": {
        "description": "",
        "summary": "Create reaction",
        "tags": [
          "Reactions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of reaction to a post",
                    "enum": [
                      "like",
                      "love",
                      "laugh",
                      "shock",
                      "sad",
                      "angry"
                    ],
                    "example": "like"
                  }
                },
                "required": ["type"]
              }
            }
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      },
      "patch": {
        "description": "",
        "summary": "Update reaction",
        "tags": [
          "Reactions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of reaction to a post",
                    "enum": [
                      "like",
                      "love",
                      "laugh",
                      "shock",
                      "sad",
                      "angry"
                    ],
                    "example": "like"
                  }
                },
                "required": ["type"]
              }
            }
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "Delete reaction",
        "tags": [
          "Reactions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/posts/{id}/comments": {
      "get": {
        "description": "",
        "summary": "Get comments",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for fetching results.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      },
      "post": {
        "description": "",
        "summary": "Create comment",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Text content that must consist solely of emojis.",
                    "example": "üéâüòäüëç"
                  }
                },
                "required": ["text"]
              }
            }
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/comments/{id}": {
      "patch": {
        "description": "",
        "summary": "Update comment",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "Text content that must consist solely of emojis.",
                    "example": "üéâüòäüëç"
                  }
                },
                "required": ["text"]
              }
            }
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "Delete comment",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/users/{id}/friendships": {
      "get": {
        "description": "",
        "summary": "Get friendships",
        "tags": [
          "Friendships"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for fetching results.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/friendships/{userId}": {
      "post": {
        "description": "",
        "summary": "Create friendship",
        "tags": [
          "Friendships"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "Delete friendship",
        "tags": [
          "Friendships"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/friend-requests": {
      "get": {
        "description": "",
        "summary": "Get friend requests of logged-in user",
        "tags": [
          "Friend Requests"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search by name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for fetching results.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of friend request",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "incoming",
                "outgoing"
              ]
            },
            "example": "incoming"
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/friend-requests/{userId}": {
      "post": {
        "description": "",
        "summary": "Create friend request",
        "tags": [
          "Friend Requests"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      },
      "delete": {
        "description": "",
        "summary": "Delete friend request",
        "tags": [
          "Friend Requests"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/upload-image": {
      "post": {
        "description": "",
        "summary": "Upload image",
        "tags": [
          "Misc"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    },
    "/translate-text-to-emojis": {
      "get": {
        "description": "",
        "summary": "Translate text to emojis",
        "tags": [
          "Misc"
        ],
        "parameters": [
          {
            "name": "text",
            "description": "",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "I love this photo!"
          }
        ],
        "responses": {
          "200": {
            "description": "successful"
          }
        },
        "security": [
          {
            "userToken": []
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://emote.jacobcons.com",
      "description": "Production"
    },
    {
      "url": "http://localhost:3000",
      "description": "Local"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": ""
    },
    {
      "name": "Users",
      "description": ""
    },
    {
      "name": "Posts",
      "description": ""
    },
    {
      "name": "Reactions",
      "description": ""
    },
    {
      "name": "Comments",
      "description": ""
    },
    {
      "name": "Friendships",
      "description": ""
    },
    {
      "name": "Friend Requests",
      "description": ""
    },
    {
      "name": "Misc",
      "description": ""
    }
  ],
  "components": {
    "securitySchemes": {
      "userToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "registerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "resetPasswordToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}